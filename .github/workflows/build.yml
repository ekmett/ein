name: CMake

on:
  push:

jobs:
  docker:
    name: Find image
    runs-on: ubuntu-latest
    outputs:
      image: '${{ steps.hash.outputs.image }}'
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout-cone-mode: false
          sparse-checkout: |
            Dockerfile
      - name: hash
        id: hash
        run: |
          hash=$(sha256sum "${GITHUB_WORKSPACE}/Dockerfile" | awk '{print substr($1, 1, 12)}')
          image="ghcr.io/${GITHUB_REPOSITORY}:${hash}-local-1001"
          echo "docker image: $image"
          echo "image=${image}" >> "$GITHUB_OUTPUT"

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: lint
        run: make -C '${{github.workspace}}' lint

  build:
    name: Build and Publish
    runs-on: ubuntu-latest
    needs: docker
    container:
      image: '${{ needs.docker.outputs.image }}'
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: download workspace
        uses: actions/upload-artifact@v4.4.3
        with:
          name: debug-pass
          path: '${{ github.workspace }}'
      - name: retain ccache
        uses: hendrikmuhs/ccache-action@v1.2
      - name: set paths
        id: paths
        run: echo "gen=${{ github.workspace }}/gen" >> "$GITHUB_OUTPUT"
      - name: browse
        run: find '${{ github.workspace }}' -print
      - name: make
        run: make -C '${{ github.workspace }}'
      - name: upload binaries
        uses: actions/upload-artifact@v4.4.3
        with:
          name: bin
          path: |
            ${{ steps.paths.outputs.gen }}/bin/
            ${{ steps.paths.outputs.gen }}/lib/
            ${{ steps.paths.outputs.gen }}/CMakeCache.txt
            ${{ steps.paths.outputs.gen }}/CMakeFiles/
            ${{ steps.paths.outputs.gen }}/**/CTestTestfile.cmake
      - name: upload docs
        uses: actions/upload-artifact@v4.4.3
        with:
          name: doc
          path: ${{ steps.paths.outputs.gen }}/doc/html/
      - name: upload trace
        uses: actions/upload-artifact@v4.4.3
        with:
          name: ein-build-trace.json
          path: ${{ steps.paths.outputs.gen }}/trace.json
      - name: publish doc
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: '${{ secrets.GITHUB_TOKEN }}'  # Use single quotes here
          publish_dir: ${{ steps.paths.outputs.gen }}/doc/html/

  test:
    name: Test
    runs-on: ubuntu-latest
    container:
      image: '${{ needs.docker.outputs.image }}'  # Use single quotes here
    needs:
      - docker
      - build
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: set paths
        id: paths
        run: echo "gen=${{ github.workspace }}/gen" >> "$GITHUB_OUTPUT"
      - name: download binaries
        uses: actions/download-artifact@v4.1.8
        with:
          name: bin
          path: ${{ steps.paths.outputs.gen }}
      - name: chmod
        run: chmod -f +x ${{ steps.paths.outputs.gen }}/bin/* 2>/dev/null || true
      - name: test
        working-directory: ${{ steps.paths.outputs.gen }}
        run: ctest -V
