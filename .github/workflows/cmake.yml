name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Fetch all history for all branches
    - name: lint
      run: make lint

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/setup/ubuntu/compiler
    - uses: ./.github/actions/setup/ubuntu/build-tools
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ubuntu-latest-ccache
    - name: set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
    - name: configure
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=clang++
        -DCMAKE_C_COMPILER=clang
        -DCMAKE_BUILD_TYPE=Release
        -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
        -DCMAKE_COLOR_DIAGNOSTICS=ON
        -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
        -G Ninja
        -S ${{ github.workspace }}
    - name: build
      run: |
        cmake --build ${{ steps.strings.outputs.build-output-dir }} --config Release
    - name: upload build artifacts
      uses: actions/upload-artifact@v4.4.3
      with:
        name: Release build
        path: ${{ steps.strings.outputs.build-output-dir }}

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: checkout code
      uses: actions/checkout@v4
    - uses: ./.github/actions/setup/ubuntu/build-tools
    - name: set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
    - name: download build artifacts
      uses: actions/download-artifact@v4.1.8
      with:
        name: Release build
        path: ${{ steps.strings.outputs.build-output-dir }}
    - name: test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: |
        ctest --build-config Release

  publish:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - name: set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
    - name: download build artifacts
      uses: actions/download-artifact@v4.1.8
      with:
        name: Release build
        path: ${{ steps.strings.outputs.build-output-dir }}
    - name: accelerate gh_pages refresh by noting there are no jekyll templates
      run: |
        touch ${{ steps.strings.outputs.build-output-dir }}/docs/html/.nojekyll
    - name: publish docs
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ${{ steps.strings.outputs.build-output-dir}}/docs/html
