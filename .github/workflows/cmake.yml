name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Fetch all history for all branches
    - name: lint
      run: make lint

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/setup/ubuntu/compiler
    - uses: ./.github/actions/setup/ubuntu/build-tools
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ubuntu-latest-ccache
    - name: set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/gen" >> "$GITHUB_OUTPUT"
    - name: configure and build
      run: |
        make -C ${{ github.workspace }}
    - name: upload binaries
      uses: actions/upload-artifact@v4.4.3
      with:
        name: bin
        path: |
          ${{ steps.strings.outputs.build-output-dir }}/bin/
          ${{ steps.strings.outputs.build-output-dir }}/lib/
          ${{ steps.strings.outputs.build-output-dir }}/CMakeCache.txt
          ${{ steps.strings.outputs.build-output-dir }}/CMakeFiles/
          ${{ steps.strings.outputs.build-output-dir }}/**/CTestTestfile.cmake
    - name: accelerate gh_pages refresh by noting there are no jekyll templates
      run: |
        touch ${{ steps.strings.outputs.build-output-dir }}/docs/html/.nojekyll
    - name: upload docs
      uses: actions/upload-artifact@v4.4.3
      with:
        name: docs
        path: ${{ steps.strings.outputs.build-output-dir }}/docs/html/
    # can be fed to ui.perfetto.dev or chrome://tracing to debug builds
    - name: upload trace.json
      uses: actions/upload-artifact@v4.4.3
      with:
        name: trace.json
        path: ${{ steps.strings.outputs.build-output-dir }}/trace.json

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: checkout code
      uses: actions/checkout@v4
    - uses: ./.github/actions/setup/ubuntu/build-tools
    - name: set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/gen" >> "$GITHUB_OUTPUT"
    - name: download build artifacts
      uses: actions/download-artifact@v4.1.8
      with:
        name: bin
        path: ${{ steps.strings.outputs.build-output-dir }}
    - name: chmod
      run: |
        chmod -f +x ${{ steps.strings.outputs.build-output-dir }}/bin/* 2>/dev/null || true
    - name: test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: |
        ctest --test-dir ${{ steps.strings.outputs.build-output-dir }} -V

  publish:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - name: set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/gen" >> "$GITHUB_OUTPUT"
    - name: download build artifacts
      uses: actions/download-artifact@v4.1.8
      with:
        name: docs
        path: ${{ steps.strings.outputs.build-output-dir }}/docs/html/
    - name: publish docs
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ${{ steps.strings.outputs.build-output-dir}}/docs/html/
